// –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const { readUsers } = require('./services/users');

function testEnvUserLogic() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...');
    
    const allUsers = readUsers();
    console.log(`üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: ${allUsers.length}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ Light Phone
    const usersWithLightPhone = allUsers.filter(u => u.settings?.lightPhoneEmail);
    console.log(`üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Light Phone –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: ${usersWithLightPhone.length}`);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –ª–æ–≥–∏–∫–∏ –∏–∑ optimized-main.js
    const testUsers = [...allUsers];
    
    // –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–∞—Å—Ç–æ—è—â–∏—Ö –Ω–µ—Ç
    if (testUsers.length === 0 || !testUsers.some(u => u.settings?.lightPhoneEmail)) {
        if (process.env.LIGHT_PHONE_EMAIL && process.env.LIGHT_PHONE_PASSWORD && process.env.CLAUDE_API_KEY) {
            console.log('üìß –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
            const envUser = {
                id: 'env-user',
                email: process.env.LIGHT_PHONE_EMAIL,
                settings: {
                    lightPhoneEmail: process.env.LIGHT_PHONE_EMAIL,
                    lightPhonePassword: process.env.LIGHT_PHONE_PASSWORD,
                    claudeApiKey: process.env.CLAUDE_API_KEY,
                    trigger: '<'
                }
            };
            testUsers.push(envUser);
        } else {
            console.log('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            console.log(`   LIGHT_PHONE_EMAIL: ${process.env.LIGHT_PHONE_EMAIL ? '‚úÖ' : '‚ùå'}`);
            console.log(`   LIGHT_PHONE_PASSWORD: ${process.env.LIGHT_PHONE_PASSWORD ? '‚úÖ' : '‚ùå'}`);
            console.log(`   CLAUDE_API_KEY: ${process.env.CLAUDE_API_KEY ? '‚úÖ' : '‚ùå'}`);
        }
    } else {
        console.log('üì± –ù–∞–π–¥–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å Light Phone –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤ –±–∞–∑–µ, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è');
    }
    
    const activeUsers = testUsers.filter(u => 
        u.settings?.lightPhoneEmail && 
        u.settings?.lightPhonePassword &&
        (u.settings?.claudeApiKey || process.env.CLAUDE_API_KEY)
    );
    
    console.log(`\nüë§ –ò—Ç–æ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${activeUsers.length}`);
    activeUsers.forEach((u, index) => {
        const source = u.id === 'env-user' ? 'ENV' : 'DB';
        console.log(`   ${index + 1}. ${u.email} (${u.id}) [${source}]`);
    });
    
    return activeUsers.length > 0;
}

if (require.main === module) {
    const success = testEnvUserLogic();
    console.log(`\n${success ? '‚úÖ' : '‚ùå'} –¢–µ—Å—Ç ${success ? '—É—Å–ø–µ—à–µ–Ω' : '–Ω–µ—É—Å–ø–µ—à–µ–Ω'}`);
}

module.exports = { testEnvUserLogic }; 