const { readUsers, writeUsers } = require('./services/users');
const bcrypt = require('bcryptjs');

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
async function createTestUser() {
    console.log('üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    const users = readUsers();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingTestUser = users.find(u => u.email === 'test@lightphone.dev');
    
    if (existingTestUser) {
        console.log('‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        existingTestUser.settings = {
            lightPhoneEmail: 'YOUR_LIGHT_PHONE_EMAIL_HERE',
            lightPhonePassword: 'YOUR_LIGHT_PHONE_PASSWORD_HERE',
            trigger: '<' // –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–º–µ—Ç–æ–∫
        };
        
        writeUsers(users);
        
        console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        console.log('üìù –¢–µ–ø–µ—Ä—å –∏–∑–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ data/users.json –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ:');
        console.log('   - lightPhoneEmail: –≤–∞—à email –æ—Ç Light Phone');
        console.log('   - lightPhonePassword: –≤–∞—à –ø–∞—Ä–æ–ª—å –æ—Ç Light Phone');
        
    } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const newUser = {
            id: `test-${Date.now()}`,
            email: 'test@lightphone.dev',
            password: await bcrypt.hash('test123', 8),
            name: 'Test User',
            settings: {
                lightPhoneEmail: 'YOUR_LIGHT_PHONE_EMAIL_HERE',
                lightPhonePassword: 'YOUR_LIGHT_PHONE_PASSWORD_HERE',
                trigger: '<' // –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–º–µ—Ç–æ–∫
            },
            created: new Date().toISOString()
        };
        
        users.push(newUser);
        writeUsers(users);
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω');
        console.log(`üìß Email: ${newUser.email}`);
        console.log(`üîë –ü–∞—Ä–æ–ª—å: test123`);
        console.log(`üÜî ID: ${newUser.id}`);
        
        console.log('\nüìù –¢–µ–ø–µ—Ä—å –∏–∑–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ data/users.json –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ:');
        console.log('   - lightPhoneEmail: –≤–∞—à email –æ—Ç Light Phone');
        console.log('   - lightPhonePassword: –≤–∞—à –ø–∞—Ä–æ–ª—å –æ—Ç Light Phone');
    }
    
    console.log('\nüöÄ –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—Å—Ç–∏—Ç–µ:');
    console.log('   npm run start:optimized');
    console.log('\nüîç –ò–ª–∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ:');
    console.log('   node test-optimized-worker.js');
}

if (require.main === module) {
    createTestUser().catch(console.error);
}

module.exports = { createTestUser }; 